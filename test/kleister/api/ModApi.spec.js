/**
 * Kleister OpenAPI
 * API definition for Kleister, manage mod packs for Minecraft
 *
 * The version of the OpenAPI document: 1.0.0-alpha1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/kleister/index'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/kleister/index'))
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kleister)
  }
}(this, function (expect, Kleister) {
  'use strict'

  // eslint-disable-next-line no-unused-vars
  var instance

  beforeEach(function () {
    instance = new Kleister.ModApi()
  })

  /* eslint-disable no-unused-vars */
  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') { return object[getter]() } else { return object[property] }
  }
  /* eslint-enable no-unused-vars */

  /* eslint-disable no-unused-vars */
  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') { object[setter](value) } else { object[property] = value }
  }
  /* eslint-enable no-unused-vars */

  describe('ModApi', function () {
    describe('appendModToTeam', function () {
      it('should call appendModToTeam successfully', function (done) {
        // uncomment below and update the code to test appendModToTeam
        // instance.appendModToTeam(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('appendModToUser', function () {
      it('should call appendModToUser successfully', function (done) {
        // uncomment below and update the code to test appendModToUser
        // instance.appendModToUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('appendVersionToBuild', function () {
      it('should call appendVersionToBuild successfully', function (done) {
        // uncomment below and update the code to test appendVersionToBuild
        // instance.appendVersionToBuild(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('createMod', function () {
      it('should call createMod successfully', function (done) {
        // uncomment below and update the code to test createMod
        // instance.createMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('createVersion', function () {
      it('should call createVersion successfully', function (done) {
        // uncomment below and update the code to test createVersion
        // instance.createVersion(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteMod', function () {
      it('should call deleteMod successfully', function (done) {
        // uncomment below and update the code to test deleteMod
        // instance.deleteMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteModFromTeam', function () {
      it('should call deleteModFromTeam successfully', function (done) {
        // uncomment below and update the code to test deleteModFromTeam
        // instance.deleteModFromTeam(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteModFromUser', function () {
      it('should call deleteModFromUser successfully', function (done) {
        // uncomment below and update the code to test deleteModFromUser
        // instance.deleteModFromUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteVersion', function () {
      it('should call deleteVersion successfully', function (done) {
        // uncomment below and update the code to test deleteVersion
        // instance.deleteVersion(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteVersionFromBuild', function () {
      it('should call deleteVersionFromBuild successfully', function (done) {
        // uncomment below and update the code to test deleteVersionFromBuild
        // instance.deleteVersionFromBuild(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listModTeams', function () {
      it('should call listModTeams successfully', function (done) {
        // uncomment below and update the code to test listModTeams
        // instance.listModTeams(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listModUsers', function () {
      it('should call listModUsers successfully', function (done) {
        // uncomment below and update the code to test listModUsers
        // instance.listModUsers(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listMods', function () {
      it('should call listMods successfully', function (done) {
        // uncomment below and update the code to test listMods
        // instance.listMods(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listVersionBuilds', function () {
      it('should call listVersionBuilds successfully', function (done) {
        // uncomment below and update the code to test listVersionBuilds
        // instance.listVersionBuilds(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listVersions', function () {
      it('should call listVersions successfully', function (done) {
        // uncomment below and update the code to test listVersions
        // instance.listVersions(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('permitModTeam', function () {
      it('should call permitModTeam successfully', function (done) {
        // uncomment below and update the code to test permitModTeam
        // instance.permitModTeam(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('permitModUser', function () {
      it('should call permitModUser successfully', function (done) {
        // uncomment below and update the code to test permitModUser
        // instance.permitModUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('showMod', function () {
      it('should call showMod successfully', function (done) {
        // uncomment below and update the code to test showMod
        // instance.showMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('showVersion', function () {
      it('should call showVersion successfully', function (done) {
        // uncomment below and update the code to test showVersion
        // instance.showVersion(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('updateMod', function () {
      it('should call updateMod successfully', function (done) {
        // uncomment below and update the code to test updateMod
        // instance.updateMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('updateVersion', function () {
      it('should call updateVersion successfully', function (done) {
        // uncomment below and update the code to test updateVersion
        // instance.updateVersion(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
  })
}))
