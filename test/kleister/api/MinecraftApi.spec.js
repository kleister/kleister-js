/**
 * Kleister OpenAPI
 * API definition for Kleister, manage mod packs for Minecraft
 *
 * The version of the OpenAPI document: 1.0.0-alpha1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/kleister/index'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/kleister/index'))
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kleister)
  }
}(this, function (expect, Kleister) {
  'use strict'

  // eslint-disable-next-line no-unused-vars
  var instance

  beforeEach(function () {
    instance = new Kleister.MinecraftApi()
  })

  /* eslint-disable no-unused-vars */
  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') { return object[getter]() } else { return object[property] }
  }
  /* eslint-enable no-unused-vars */

  /* eslint-disable no-unused-vars */
  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') { object[setter](value) } else { object[property] = value }
  }
  /* eslint-enable no-unused-vars */

  describe('MinecraftApi', function () {
    describe('appendMinecraftToBuild', function () {
      it('should call appendMinecraftToBuild successfully', function (done) {
        // uncomment below and update the code to test appendMinecraftToBuild
        // instance.appendMinecraftToBuild(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteMinecraftFromBuild', function () {
      it('should call deleteMinecraftFromBuild successfully', function (done) {
        // uncomment below and update the code to test deleteMinecraftFromBuild
        // instance.deleteMinecraftFromBuild(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listMinecraftBuilds', function () {
      it('should call listMinecraftBuilds successfully', function (done) {
        // uncomment below and update the code to test listMinecraftBuilds
        // instance.listMinecraftBuilds(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listMinecrafts', function () {
      it('should call listMinecrafts successfully', function (done) {
        // uncomment below and update the code to test listMinecrafts
        // instance.listMinecrafts(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('searchMinecrafts', function () {
      it('should call searchMinecrafts successfully', function (done) {
        // uncomment below and update the code to test searchMinecrafts
        // instance.searchMinecrafts(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('updateMinecraft', function () {
      it('should call updateMinecraft successfully', function (done) {
        // uncomment below and update the code to test updateMinecraft
        // instance.updateMinecraft(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
  })
}))
