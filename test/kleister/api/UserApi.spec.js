/**
 * Kleister OpenAPI
 * API definition for Kleister, manage mod packs for Minecraft
 *
 * The version of the OpenAPI document: 1.0.0-alpha1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/kleister/index'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/kleister/index'))
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kleister)
  }
}(this, function (expect, Kleister) {
  'use strict'

  // eslint-disable-next-line no-unused-vars
  var instance

  beforeEach(function () {
    instance = new Kleister.UserApi()
  })

  /* eslint-disable no-unused-vars */
  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') { return object[getter]() } else { return object[property] }
  }
  /* eslint-enable no-unused-vars */

  /* eslint-disable no-unused-vars */
  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') { object[setter](value) } else { object[property] = value }
  }
  /* eslint-enable no-unused-vars */

  describe('UserApi', function () {
    describe('appendUserToMod', function () {
      it('should call appendUserToMod successfully', function (done) {
        // uncomment below and update the code to test appendUserToMod
        // instance.appendUserToMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('appendUserToPack', function () {
      it('should call appendUserToPack successfully', function (done) {
        // uncomment below and update the code to test appendUserToPack
        // instance.appendUserToPack(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('appendUserToTeam', function () {
      it('should call appendUserToTeam successfully', function (done) {
        // uncomment below and update the code to test appendUserToTeam
        // instance.appendUserToTeam(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('createUser', function () {
      it('should call createUser successfully', function (done) {
        // uncomment below and update the code to test createUser
        // instance.createUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteUser', function () {
      it('should call deleteUser successfully', function (done) {
        // uncomment below and update the code to test deleteUser
        // instance.deleteUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteUserFromMod', function () {
      it('should call deleteUserFromMod successfully', function (done) {
        // uncomment below and update the code to test deleteUserFromMod
        // instance.deleteUserFromMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteUserFromPack', function () {
      it('should call deleteUserFromPack successfully', function (done) {
        // uncomment below and update the code to test deleteUserFromPack
        // instance.deleteUserFromPack(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('deleteUserFromTeam', function () {
      it('should call deleteUserFromTeam successfully', function (done) {
        // uncomment below and update the code to test deleteUserFromTeam
        // instance.deleteUserFromTeam(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listUserMods', function () {
      it('should call listUserMods successfully', function (done) {
        // uncomment below and update the code to test listUserMods
        // instance.listUserMods(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listUserPacks', function () {
      it('should call listUserPacks successfully', function (done) {
        // uncomment below and update the code to test listUserPacks
        // instance.listUserPacks(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listUserTeams', function () {
      it('should call listUserTeams successfully', function (done) {
        // uncomment below and update the code to test listUserTeams
        // instance.listUserTeams(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('listUsers', function () {
      it('should call listUsers successfully', function (done) {
        // uncomment below and update the code to test listUsers
        // instance.listUsers(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('permitUserMod', function () {
      it('should call permitUserMod successfully', function (done) {
        // uncomment below and update the code to test permitUserMod
        // instance.permitUserMod(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('permitUserPack', function () {
      it('should call permitUserPack successfully', function (done) {
        // uncomment below and update the code to test permitUserPack
        // instance.permitUserPack(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('permitUserTeam', function () {
      it('should call permitUserTeam successfully', function (done) {
        // uncomment below and update the code to test permitUserTeam
        // instance.permitUserTeam(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('showUser', function () {
      it('should call showUser successfully', function (done) {
        // uncomment below and update the code to test showUser
        // instance.showUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
    describe('updateUser', function () {
      it('should call updateUser successfully', function (done) {
        // uncomment below and update the code to test updateUser
        // instance.updateUser(function(error) {
        //  if (error) throw error;
        // expect().to.be();
        // });
        done()
      })
    })
  })
}))
