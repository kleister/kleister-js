/**
 * Kleister OpenAPI
 * API definition for Kleister, manage mod packs for Minecraft
 *
 * The version of the OpenAPI document: 1.0.0-alpha1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient'

/**
 * The BuildVersionParams model module.
 * @module kleister/model/BuildVersionParams
 * @version 1.0.0-alpha1
 */
class BuildVersionParams {
  /**
     * Constructs a new <code>BuildVersionParams</code>.
     * @alias module:kleister/model/BuildVersionParams
     * @param pack {String}
     * @param build {String}
     * @param mod {String}
     * @param version {String}
     */
  constructor (pack, build, mod, version) {
    BuildVersionParams.initialize(this, pack, build, mod, version)
  }

  /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
  static initialize (obj, pack, build, mod, version) {
    obj['pack'] = pack
    obj['build'] = build
    obj['mod'] = mod
    obj['version'] = version
  }

  /**
     * Constructs a <code>BuildVersionParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:kleister/model/BuildVersionParams} obj Optional instance to populate.
     * @return {module:kleister/model/BuildVersionParams} The populated <code>BuildVersionParams</code> instance.
     */
  static constructFromObject (data, obj) {
    if (data) {
      obj = obj || new BuildVersionParams()

      if (data.hasOwnProperty('pack')) {
        obj['pack'] = ApiClient.convertToType(data['pack'], 'String')
      }
      if (data.hasOwnProperty('build')) {
        obj['build'] = ApiClient.convertToType(data['build'], 'String')
      }
      if (data.hasOwnProperty('mod')) {
        obj['mod'] = ApiClient.convertToType(data['mod'], 'String')
      }
      if (data.hasOwnProperty('version')) {
        obj['version'] = ApiClient.convertToType(data['version'], 'String')
      }
    }
    return obj
  }
}

/**
 * @member {String} pack
 */
BuildVersionParams.prototype['pack'] = undefined

/**
 * @member {String} build
 */
BuildVersionParams.prototype['build'] = undefined

/**
 * @member {String} mod
 */
BuildVersionParams.prototype['mod'] = undefined

/**
 * @member {String} version
 */
BuildVersionParams.prototype['version'] = undefined

export default BuildVersionParams
